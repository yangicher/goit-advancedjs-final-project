{"version":3,"file":"commonHelpers.js","sources":["../src/js/api.js","../src/js/exercises.js","../src/js/scroll-to-top.js"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://your-energy.b.goit.study/api/';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nexport const get = async (path, params) => {\n  try {\n    const response = await axios.get(`${BASE_URL}${path}`, { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error in get:', error);\n    throw error;\n  }\n};\n\nexport const patch = async (path, params) => {\n  try {\n    const response = await axios.patch(`${BASE_URL}${path}`, params);\n    return response.data;\n  } catch (error) {\n    console.error('Error in patch:', error);\n    throw error;\n  }\n};\n\nexport const post = async (path, params) => {\n    try {\n        const res = await axios.post(`${BASE_URL}${path}`, params);\n        return res.data;\n    } catch (error) {\n        console.error('Error in post:', error);\n        return error.response;\n    }\n};","import { get } from './api';\n\n// ===============================================\n// CONSTANTS & CONFIGURATION\n// ===============================================\nconst CONFIG = {\n  FILTERS_PER_PAGE: 12,\n  EXERCISES_PER_PAGE: 10,\n  SEARCH_DEBOUNCE_DELAY: 1000,\n  ANIMATION_DURATION: 0,\n  DEFAULT_FILTER: 'Muscles',\n};\n\nconst SELECTORS = {\n  musclesGrid: '#muscles-grid',\n  tabs: '.tab',\n  searchSection: '#search-section',\n  breadcrumb: '#breadcrumb',\n  searchInput: '.search-input',\n  searchClearBtn: '#search-clear-btn',\n};\n\nconst FILTER_TYPES = {\n  MUSCLES: 'Muscles',\n  BODY_PARTS: 'Body parts',\n  EQUIPMENT: 'Equipment',\n};\n\n// ===============================================\n// STATE MANAGEMENT\n// ===============================================\nclass ExercisesState {\n  constructor() {\n    this.currentPage = 1;\n    this.totalPages = 1;\n    this.currentFilter = CONFIG.DEFAULT_FILTER;\n    this.selectedBodyPart = '';\n    this.allExercises = [];\n    this.filteredExercises = [];\n    this.currentHeight = 0;\n    this.searchTimeout = null;\n  }\n\n  reset() {\n    this.currentPage = 1;\n    this.totalPages = 1;\n    this.allExercises = [];\n    this.filteredExercises = [];\n    this.selectedBodyPart = '';\n    this.clearSearchTimeout();\n  }\n\n  clearSearchTimeout() {\n    if (this.searchTimeout) {\n      clearTimeout(this.searchTimeout);\n      this.searchTimeout = null;\n    }\n  }\n}\n\n// ===============================================\n// DOM UTILITIES\n// ===============================================\nclass DOMUtils {\n  static getElementById(id) {\n    return document.getElementById(id.replace('#', ''));\n  }\n\n  static querySelectorAll(selector) {\n    return document.querySelectorAll(selector);\n  }\n\n  static show(element) {\n    element.style.display = 'block';\n  }\n\n  static hide(element) {\n    element.style.display = 'none';\n  }\n\n  static setContent(element, content) {\n    element.innerHTML = content;\n  }\n\n  static measureContentHeight(content, containerWidth) {\n    const tempContainer = document.createElement('div');\n    Object.assign(tempContainer.style, {\n      visibility: 'hidden',\n      position: 'absolute',\n      top: '-9999px',\n      width: `${containerWidth}px`,\n    });\n    tempContainer.innerHTML = content;\n    document.body.appendChild(tempContainer);\n\n    const height = tempContainer.scrollHeight;\n    document.body.removeChild(tempContainer);\n    return height;\n  }\n\n  static animateHeight(element, newHeight, duration = CONFIG.ANIMATION_DURATION) {\n    element.style.height = `${newHeight}px`;\n    setTimeout(() => {\n      element.style.height = 'auto';\n    }, duration);\n  }\n}\n\n// ===============================================\n// API UTILITIES\n// ===============================================\nclass APIService {\n  static async fetchFilters(filter, page = 1) {\n    return await get('filters', {\n      filter,\n      page,\n      limit: CONFIG.FILTERS_PER_PAGE\n    });\n  }\n\n  static async fetchExercises(filterName, filterType, page = 1) {\n    const params = {\n      page,\n      limit: CONFIG.EXERCISES_PER_PAGE\n    };\n\n    switch (filterType) {\n      case FILTER_TYPES.BODY_PARTS:\n        params.bodypart = filterName;\n        break;\n      case FILTER_TYPES.MUSCLES:\n        params.muscles = filterName;\n        break;\n      case FILTER_TYPES.EQUIPMENT:\n        params.equipment = filterName;\n        break;\n    }\n\n    return await get('exercises', params);\n  }\n}\n\n// ===============================================\n// TEMPLATE GENERATORS\n// ===============================================\nclass Templates {\n  static filterCard(item) {\n    return `\n      <div class=\"muscle-card\" data-filter=\"${item.name}\" data-filter-type=\"${item.filter}\">\n        <img src=\"${item.imgURL}\" alt=\"${item.name}\" class=\"muscle-card-img\" />\n        <div class=\"muscle-card-label\">\n          <span class=\"muscle-card-title\">${item.name}</span>\n          <span class=\"muscle-card-subtitle\">${item.filter}</span>\n        </div>\n      </div>\n    `;\n  }\n\n  static exerciseCard(exercise) {\n    return `\n      <div class=\"exercise-item\">\n        <div class=\"exercise-top-row\">\n          <div class=\"workout-rating-left\">\n            <div class=\"workout-badge\">WORKOUT</div>\n            <div class=\"rating\">\n              ${exercise.rating} <span class=\"star\"><img src=\"/img/icons/star.svg\" alt=\"star\" /></span>\n            </div>\n          </div>\n          <button class=\"start-btn\">Start <span class=\"arrow\"><img src=\"/img/icons/start-arrow.svg\" alt=\"Start\" /></span></button>\n        </div>\n        <div class=\"exercise-middle-row\">\n          <div class=\"exercise-icon\"><img src=\"/img/icons/exercise-icon.svg\" /></div>\n          <h3 class=\"exercise-title\">${exercise.name}</h3>\n        </div>\n        <div class=\"exercise-bottom-row\">\n          <span><span class=\"meta-label\">Burned calories:</span> <span class=\"meta-value\">${exercise.burnedCalories}</span></span>\n          <span><span class=\"meta-label\">Body part:</span> <span class=\"meta-value\">${exercise.bodyPart}</span></span>\n          <span><span class=\"meta-label\">Target:</span> <span class=\"meta-value\">${exercise.target}</span></span>\n        </div>\n      </div>\n    `;\n  }\n\n  static pagination(currentPage, totalPages) {\n    if (totalPages <= 1) return '';\n\n    const pages = [];\n\n    // Previous button\n    pages.push(`\n      <button class=\"page-btn nav-btn prev\" ${currentPage === 1 ? 'disabled' : ''} data-page=\"prev\"></button>\n    `);\n\n    // Page numbers\n    pages.push(Templates.generatePageNumbers(currentPage, totalPages));\n\n    // Next button\n    pages.push(`\n      <button class=\"page-btn nav-btn next\" ${currentPage === totalPages ? 'disabled' : ''} data-page=\"next\"></button>\n    `);\n\n    return `<div class=\"muscles-pagination\">${pages.join('')}</div>`;\n  }\n\n  static generatePageNumbers(current, total) {\n    const pages = [];\n\n    if (total <= 5) {\n      for (let i = 1; i <= total; i++) {\n        pages.push(`<button class=\"page-btn ${i === current ? 'active' : ''}\" data-page=\"${i}\">${i}</button>`);\n      }\n    } else {\n      pages.push(`<button class=\"page-btn ${1 === current ? 'active' : ''}\" data-page=\"1\">1</button>`);\n\n      if (current > 3) {\n        pages.push('<span class=\"page-dots\">...</span>');\n      }\n\n      const start = Math.max(2, current - 1);\n      const end = Math.min(total - 1, current + 1);\n\n      for (let i = start; i <= end; i++) {\n        if (i !== 1 && i !== total) {\n          pages.push(`<button class=\"page-btn ${i === current ? 'active' : ''}\" data-page=\"${i}\">${i}</button>`);\n        }\n      }\n\n      if (current < total - 2) {\n        pages.push('<span class=\"page-dots\">...</span>');\n      }\n\n      if (total > 1) {\n        pages.push(`<button class=\"page-btn ${total === current ? 'active' : ''}\" data-page=\"${total}\">${total}</button>`);\n      }\n    }\n\n    return pages.join('');\n  }\n\n  static loadingTemplate(height) {\n    return `<div class=\"loading\" style=\"height: ${height - 80}px;\">Loading...</div>`;\n  }\n\n  static errorTemplate(message) {\n    return `<div class=\"error\">${message}</div>`;\n  }\n\n  static contentWrapper(content, paginationHTML = '') {\n    return `\n      <div class=\"content-wrapper\">\n        <div class=\"content-area\">${content}</div>\n        ${paginationHTML ? `<div class=\"pagination-area\">${paginationHTML}</div>` : ''}\n      </div>\n    `;\n  }\n}\n\n// ===============================================\n// MAIN EXERCISES CLASS\n// ===============================================\nclass ExercisesManager {\n  constructor() {\n    this.state = new ExercisesState();\n    this.elements = this.initializeElements();\n\n    // Don't continue if essential elements are missing\n    if (!this.elements) {\n      console.error('Failed to initialize ExercisesManager: required DOM elements not found');\n      return;\n    }\n\n    this.setupEventListeners();\n  }\n\n  initializeElements() {\n    const elements = {\n      musclesGrid: DOMUtils.getElementById(SELECTORS.musclesGrid),\n      tabs: DOMUtils.querySelectorAll(SELECTORS.tabs),\n      searchSection: DOMUtils.getElementById(SELECTORS.searchSection),\n      breadcrumb: DOMUtils.getElementById(SELECTORS.breadcrumb),\n      searchClearBtn: DOMUtils.getElementById(SELECTORS.searchClearBtn),\n    };\n\n    // Check if essential elements exist\n    if (!elements.musclesGrid || !elements.searchSection) {\n      console.error('Essential DOM elements not found for exercises functionality');\n      return null;\n    }\n\n    // Add searchInput safely\n    elements.searchInput = elements.searchSection.querySelector(SELECTORS.searchInput);\n\n    return elements;\n  }\n\n  setupEventListeners() {\n    this.setupTabListeners();\n    this.setupSearchListeners();\n  }\n\n  setupTabListeners() {\n    this.elements.tabs.forEach(tab => {\n      tab.addEventListener('click', () => this.handleTabSwitch(tab));\n    });\n  }\n\n  setupSearchListeners() {\n    this.elements.searchInput.addEventListener('input', (e) => this.handleSearchInput(e));\n    this.elements.searchInput.addEventListener('keydown', (e) => this.handleSearchKeydown(e));\n    this.elements.searchClearBtn.addEventListener('click', (e) => this.handleSearchClear(e));\n  }\n\n  // ===============================================\n  // RENDERING METHODS\n  // ===============================================\n  async renderFilters(filter = CONFIG.DEFAULT_FILTER, page = 1) {\n    this.hideSearchAndBreadcrumb();\n    this.state.selectedBodyPart = '';\n\n    this.prepareContainer();\n\n    try {\n      const data = await APIService.fetchFilters(filter, page);\n      this.updateFilterState(data, filter);\n\n      if (!data.results.length) {\n        this.showError('No items found.');\n        return;\n      }\n\n      const content = this.buildFiltersContent(data.results);\n      const paginationHTML = Templates.pagination(page, this.state.totalPages);\n      const fullContent = Templates.contentWrapper(content, paginationHTML);\n\n      this.updateContainerWithAnimation(fullContent);\n      this.attachFilterEventListeners();\n\n    } catch (error) {\n      this.showError('Failed to load data.');\n    }\n  }\n\n  async renderExercisesList(filterName, filterType, searchTerm = '', page = 1) {\n    this.showSearchAndBreadcrumb(filterName);\n\n    if (!searchTerm) {\n      this.clearSearchInput();\n    }\n\n    this.prepareContainer();\n\n    try {\n      const data = await APIService.fetchExercises(filterName, filterType, page);\n      this.updateExercisesState(data, filterName);\n\n      const filteredExercises = this.filterExercises(searchTerm);\n\n      if (filteredExercises.length === 0) {\n        this.showNoExercisesFound(searchTerm);\n        return;\n      }\n\n      const content = this.buildExercisesContent(filteredExercises, filterName);\n      const paginationHTML = searchTerm ? '' : Templates.pagination(page, this.state.totalPages);\n      const fullContent = Templates.contentWrapper(content, paginationHTML);\n\n      this.updateContainerWithAnimation(fullContent);\n      this.attachExercisesEventListeners(searchTerm);\n\n    } catch (error) {\n      this.showError('Failed to load exercises.');\n    }\n  }\n\n  // ===============================================\n  // CONTENT BUILDING METHODS\n  // ===============================================\n  buildFiltersContent(results) {\n    const cardsHTML = results.map(item => Templates.filterCard(item)).join('');\n    return `<div class=\"muscles-cards-wrapper\">${cardsHTML}</div>`;\n  }\n\n  buildExercisesContent(exercises, filterName) {\n    const exercisesHTML = exercises.map(exercise => Templates.exerciseCard(exercise)).join('');\n    const backButton = `<button class=\"back-btn\"><span class=\"arrow\">←</span> Back to ${this.state.currentFilter}</button>`;\n    return `<div class=\"exercises-list\">${exercisesHTML}</div>${backButton}`;\n  }\n\n  // ===============================================\n  // STATE UPDATE METHODS\n  // ===============================================\n  updateFilterState(data, filter) {\n    this.state.totalPages = data.totalPages;\n    this.state.currentFilter = filter;\n  }\n\n  updateExercisesState(data, filterName) {\n    this.state.allExercises = data.results || [];\n    this.state.totalPages = data.totalPages || 1;\n    this.state.selectedBodyPart = filterName;\n  }\n\n  filterExercises(searchTerm) {\n    if (searchTerm) {\n      this.state.filteredExercises = this.state.allExercises.filter(exercise =>\n        exercise.name.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    } else {\n      this.state.filteredExercises = [...this.state.allExercises];\n    }\n    return this.state.filteredExercises;\n  }\n\n  // ===============================================\n  // UI UPDATE METHODS\n  // ===============================================\n  hideSearchAndBreadcrumb() {\n    DOMUtils.hide(this.elements.searchSection);\n    DOMUtils.hide(this.elements.breadcrumb);\n  }\n\n  showSearchAndBreadcrumb(filterName) {\n    DOMUtils.show(this.elements.searchSection);\n    DOMUtils.show(this.elements.breadcrumb);\n    this.elements.breadcrumb.textContent = `/ ${filterName.charAt(0).toUpperCase() + filterName.slice(1)}`;\n  }\n\n  prepareContainer() {\n    if (this.state.currentHeight === 0) {\n      this.state.currentHeight = this.elements.musclesGrid.getBoundingClientRect().height || 600;\n    }\n\n    this.elements.musclesGrid.style.height = `${this.state.currentHeight}px`;\n    DOMUtils.setContent(this.elements.musclesGrid, Templates.loadingTemplate(this.state.currentHeight));\n  }\n\n  updateContainerWithAnimation(content) {\n    const newHeight = DOMUtils.measureContentHeight(content, this.elements.musclesGrid.offsetWidth);\n\n    DOMUtils.setContent(this.elements.musclesGrid, content);\n    DOMUtils.animateHeight(this.elements.musclesGrid, newHeight);\n    this.state.currentHeight = newHeight;\n  }\n\n  showError(message) {\n    DOMUtils.setContent(this.elements.musclesGrid, Templates.errorTemplate(message));\n  }\n\n  showNoExercisesFound(searchTerm) {\n    const message = `No exercises found${searchTerm ? ` matching \"${searchTerm}\"` : ''}.`;\n    const backButton = `<button class=\"back-btn\"><span class=\"arrow\">←</span> Back to ${this.state.currentFilter}</button>`;\n    DOMUtils.setContent(this.elements.musclesGrid, Templates.errorTemplate(message) + backButton);\n    this.attachBackButtonListener();\n  }\n\n  // ===============================================\n  // EVENT HANDLERS\n  // ===============================================\n  handleTabSwitch(tab) {\n    this.elements.tabs.forEach(t => t.classList.remove('active'));\n    tab.classList.add('active');\n\n    this.state.reset();\n    this.clearSearchInput();\n\n    const filterMap = {\n      'muscles': FILTER_TYPES.MUSCLES,\n      'body-parts': FILTER_TYPES.BODY_PARTS,\n      'equipment': FILTER_TYPES.EQUIPMENT,\n    };\n\n    const filter = filterMap[tab.dataset.tab] || CONFIG.DEFAULT_FILTER;\n    this.renderFilters(filter, 1);\n  }\n\n  handleSearchInput(e) {\n    const searchTerm = e.target.value.trim();\n    this.updateSearchClearButton();\n\n    this.state.clearSearchTimeout();\n    this.state.searchTimeout = setTimeout(() => {\n      this.performSearch(searchTerm);\n    }, CONFIG.SEARCH_DEBOUNCE_DELAY);\n  }\n\n  handleSearchKeydown(e) {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      this.state.clearSearchTimeout();\n      this.performSearch(e.target.value.trim());\n    }\n  }\n\n  handleSearchClear(e) {\n    e.preventDefault();\n    this.clearSearch();\n  }\n\n  // ===============================================\n  // SEARCH METHODS\n  // ===============================================\n  performSearch(searchTerm) {\n    if (this.state.selectedBodyPart) {\n      this.renderExercisesList(this.state.selectedBodyPart, this.state.currentFilter, searchTerm, 1);\n    }\n  }\n\n  clearSearch() {\n    this.elements.searchInput.value = '';\n    this.updateSearchClearButton();\n    this.state.clearSearchTimeout();\n\n    if (this.state.selectedBodyPart) {\n      this.performSearch('');\n    }\n  }\n\n  clearSearchInput() {\n    this.elements.searchInput.value = '';\n    this.updateSearchClearButton();\n  }\n\n  updateSearchClearButton() {\n    const hasValue = this.elements.searchInput.value.trim().length > 0;\n    this.elements.searchClearBtn.style.display = hasValue ? 'flex' : 'none';\n  }\n\n  // ===============================================\n  // EVENT LISTENER ATTACHMENTS\n  // ===============================================\n  attachFilterEventListeners() {\n    this.attachFilterCardListeners();\n    this.attachPaginationListeners('filters');\n  }\n\n  attachExercisesEventListeners(searchTerm) {\n    this.attachBackButtonListener();\n    if (!searchTerm) {\n      this.attachPaginationListeners('exercises');\n    }\n  }\n\n  attachFilterCardListeners() {\n    this.elements.musclesGrid.querySelectorAll('.muscle-card').forEach(card => {\n      card.addEventListener('click', () => {\n        const filterName = card.dataset.filter;\n        const filterType = card.dataset.filterType;\n        this.renderExercisesList(filterName, filterType, '', 1);\n      });\n    });\n  }\n\n  attachBackButtonListener() {\n    const backBtn = this.elements.musclesGrid.querySelector('.back-btn');\n    if (backBtn) {\n      backBtn.addEventListener('click', () => {\n        this.state.reset();\n        this.clearSearchInput();\n        this.renderFilters(this.state.currentFilter, 1);\n      });\n    }\n  }\n\n  attachPaginationListeners(type) {\n    this.elements.musclesGrid.querySelectorAll('.page-btn').forEach(btn => {\n      btn.addEventListener('click', () => this.handlePagination(btn, type));\n    });\n  }\n\n  handlePagination(btn, type) {\n    const { page } = btn.dataset;\n    let newPage = this.state.currentPage;\n\n    if (page === 'prev' && this.state.currentPage > 1) {\n      newPage = this.state.currentPage - 1;\n    } else if (page === 'next' && this.state.currentPage < this.state.totalPages) {\n      newPage = this.state.currentPage + 1;\n    } else if (page && !isNaN(page)) {\n      newPage = parseInt(page);\n    }\n\n    if (newPage !== this.state.currentPage) {\n      this.state.currentPage = newPage;\n\n      if (type === 'filters') {\n        this.renderFilters(this.state.currentFilter, newPage);\n      } else {\n        this.renderExercisesList(this.state.selectedBodyPart, this.state.currentFilter, '', newPage);\n      }\n    }\n  }\n\n  // ===============================================\n  // INITIALIZATION\n  // ===============================================\n  init() {\n    // Don't initialize if elements weren't properly set up\n    if (!this.elements) {\n      return;\n    }\n    this.renderFilters(CONFIG.DEFAULT_FILTER, 1);\n  }\n}\n\n// ===============================================\n// APPLICATION STARTUP\n// ===============================================\nfunction initExercisesApp() {\n  const exercisesManager = new ExercisesManager();\n  exercisesManager.init();\n}\n\n// Initialize when DOM is ready\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', initExercisesApp);\n} else {\n  // DOM is already loaded\n  initExercisesApp();\n}","// Get the button:\nlet scrollTopBtn = document.getElementById('scrollTopButton');\n\nif (scrollTopBtn) {\n  scrollTopBtn.onclick = function () {\n    topFunction();\n  };\n}\n\n// When the user scrolls down 20px from the top of the document, show the button\nwindow.onscroll = function () {\n  scrollFunction();\n};\n\nfunction scrollFunction() {\n  if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {\n    scrollTopBtn.style.display = 'block';\n  } else {\n    scrollTopBtn.style.display = 'none';\n  }\n}\n\n// When the user clicks on the button, scroll to the top of the document\nfunction topFunction() {\n  document.body.scrollTop = 0; // For Safari\n  document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\n}\n"],"names":["BASE_URL","axios","get","path","params","error","CONFIG","SELECTORS","FILTER_TYPES","ExercisesState","DOMUtils","id","selector","element","content","containerWidth","tempContainer","height","newHeight","duration","APIService","filter","page","filterName","filterType","Templates","item","exercise","currentPage","totalPages","pages","current","total","i","start","end","message","paginationHTML","ExercisesManager","elements","tab","data","fullContent","searchTerm","filteredExercises","results","exercises","exercisesHTML","backButton","t","hasValue","card","backBtn","type","btn","newPage","initExercisesApp","scrollTopBtn","topFunction","scrollFunction"],"mappings":"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"}